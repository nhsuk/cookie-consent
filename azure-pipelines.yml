trigger:
- master
- azure-pipelines

pool:
 vmImage: 'ubuntu-latest'
 
variables:
  log_to_splunk: true

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '14.x'
  displayName: 'Install Node.js'
  
- script: npm install
  displayName: npm install

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'nhsdigital'
    scannerMode: 'CLI'
    configMode: 'file'
    extraProperties: |
      sonar.language=js
      sonar.projectKey=nhsuk-cookie-consent
      sonar.javascript.lcov.reportPaths=coverage/lcov.info,tests/integration-tests/coverage/lcov.info
      sonar.dependencyCheck.htmlReportPath=$(System.DefaultWorkingDirectory)/dependency-scan-results/dependency-check-report.html
      sonar.exclusions=**/*.config.js,/coverage/**,tests/**/coverage/**,**/integration-tests/,**/tests/example/,**/*.test.*,__mocks__/**,*test-environment.*,**/dependency-scan-results/dependency-check-report.html,node_modules/**

- script: npm run build:production
  displayName: 'build'

- script: npm run lint
  displayName: linting

- script: CI=true npm run test
  displayName: testing

- task: dependency-check-build-task@6
  displayName: 'Run OWASP Dependency Check'
  inputs:
    projectName: 'cookie-consent'
    scanPath: '$(Build.SourcesDirectory)'
    format: 'HTML, JUNIT'
    reportsDirectory: '$(System.DefaultWorkingDirectory)/dependency-scan-results'
    dependencyCheckVersion: '8.4.3'

- script: |
    pat=$(AZURE_DEVOPS_PERSONAL_PAT)
    azBuildId=$(curl -s -u :$pat \
      -H "Content-Type: application/json" \
      "https://dev.azure.com/nhsuk/nhsuk.utilities/_apis/build/latest/1395?branchName=main&resultFilter=succeeded&statusFilter=completed&api-version=7.1-preview.1" | jq '.id')
    
    echo "azBuildId" $azBuildId
    echo $pat | az devops login --org "https://dev.azure.com/nhsuk/"
    az pipelines runs artifact download \
      --artifact-name owasp \
      --path $(Pipeline.Workspace)/owasp \
      --run-id $azBuildId \
      --org "https://dev.azure.com/nhsuk/" \
      --project nhsuk.utilities
    
    find $(Pipeline.Workspace)/owasp/ -type f -iname "*.sh" -exec chmod +x {} \;
  displayName: 'Install & Login Azure DevOps Extension'
  
- task: Bash@3
  inputs:
    filePath: '$(Pipeline.Workspace)/owasp/run_owasp_scanner.sh'
    arguments: '--scan "$(System.DefaultWorkingDirectory)" --failOnCVSS "7" --project "cookie-consent" --out "$(System.DefaultWorkingDirectory)/dependency-scan-results" --format HTML --format JUNIT --format JSON'
  displayName: Run OWASP Dependency Check

- task: PublishTestResults@2
  displayName: 'Publish OWASP Dependency Check Results'
  condition: succeededOrFailed()
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '$(System.DefaultWorkingDirectory)/dependency-scan-results/dependency-check-junit.xml'
    testRunTitle: 'Dependency check'

- task: PublishBuildArtifacts@1
  displayName: Publish Owasp Artifact
  condition: succeededOrFailed()
  inputs:
    ArtifactName: Owasp
    TargetPath: '$(System.DefaultWorkingDirectory)/dependency-scan-results/'

- task: SonarCloudAnalyze@1
  displayName: 'Run SonarCloud Code Analysis'

- task: SonarCloudPublish@1
  displayName: 'Publish Quality Gate Result'

- task: sonarcloud-buildbreaker@2
  displayName: "Break the build if the quality gate fails"
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'nhsdigital'

- task: CopyFiles@2
  inputs:
    sourceFolder: $(Build.SourcesDirectory)/dist
    targetFolder: $(Build.ArtifactStagingDirectory)

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: $(Build.ArtifactStagingDirectory)
    artifactName: dist
